@model Riode.WebUI.Models.Entities.Product

@{
    ViewData["Title"] = "Create";
}

<form class="row" asp-action="Create" enctype="multipart/form-data" id="productCreate">
    <div class="col-12 col-lg-6">
        <div class="form-group">
            <div style="width: 100%" class="imager-container" id="viewer1" name="Images">
            </div>
            <span asp-validation-for="ProductImages"></span>
        </div>
    </div>
    <div class="col-12 col-lg-6">
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-group">
                    <label asp-for="StockKeepingUnit" class="control-label"></label>
                    <input asp-for="StockKeepingUnit" class="form-control" />
                    <span asp-validation-for="StockKeepingUnit" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-group">
                    <label asp-for="BrandId" class="control-label"></label>
                    <select asp-for="BrandId" class="form-control" asp-items="ViewBag.BrandId"></select>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-group">
                    <label asp-for="ShortDescription" class="control-label"></label>
                    <input asp-for="ShortDescription" class="form-control" />
                    <span asp-validation-for="ShortDescription" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label"></label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12">
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-success" />
            <a asp-action="Index" class="btn btn-primary">Back to List</a>
        </div>
    </div>
</form>

@section css{
    <link rel="stylesheet" type="text/css" href="~/admin/assets/libs/multiple-imager-js/css/imager.css"/>
}

@section js{
<script src="~/admin/assets/libs/multiple-imager-js/js/imager.js"></script>
<script>

    $(document).ready(function(){
        $('#viewer1').imgadd({
            tnWidth: '120px',
            tnHeight: '120px',
            fontSize: '55px',
            plusInnerHtml: '',
            plusBtnClass: undefined
        });



        $('#productCreate').submit(function(e){
            e.preventDefault();

            const btn = $(e.currentTarget).find('input[type=submit]');
            $(btn).attr('disable','disabled');

            let formData = new FormData(e.currentTarget);

            $.ajax({
             url:'@Url.Action("Create")',
             type:'post',
             data:formData,
             contentType:false,
             processData: false,
             beforeSent:function(xhr)
             {

             },
             success:function(response){

                     if(response.error==undefined){
                         console.log(response);
                         let errors = response.errors.map(err=>{
                            return {
                                propertyName: err.propertyName,
                                errorMessage: err.errorMessage};
                            });

                         console.log(errors);
                         return;
                      }
                     else if(response.error==true){
                        toastr.error(response.message,"Unsuccessful");
                        $(btn).removeAttr('disable');
                        return;
                     }

                     e.currentTarget.reset();
                     toastr.success(response.message,"Successful");
                     location.href=`@Url.Action("Index")`;
                 },
             error:function(response){
                $(btn).removeAttr('disable');
                console.warn(response);
             }
            })
            .always(function(){

            });
        });

    });
</script>
}

